<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 생성자 인젝션(생성자 주입)을 이용하기 위해서 SamsungTV 클래스 bean 등록 설정에서
           시작 태그와 종료 태그 사이에 constructor-arg 엘리먼트를 추가하면 됩니다.
           그리고, 생성자 인자로 전달할 객체의 아이디를 constructor-arg 엘리먼트에 ref 속성으로
           참조합니다. -->
           <!-- index="0", index="1"을 넣어준 이유는 생성자가 여러개 오버로딩 되어 있다면
           	어떤 생성자를 호출해야 할지 분명하지 않을 수 있습니다. 이를 구분하기 위해 index 속성을 지원하며,
           	index 속성을 이용하면 어떤 값이 몇 번째 매개변수로 매핑을 할 것인지 지정할 수 있습니다.
           	참고로, index는 0부터 시작합니다. 
           <bean id="tv" class="polymorghism_9.SamsungTV">
           	<constructor-arg index="0" ref="sony"></constructor-arg>
           	<constructor-arg index="1" value="2700000"></constructor-arg>
           </bean>
           <bean id="sony" class="polymorghism_9.SonySpeaker">
           </bean>
           	-->



	<!-- 생성자 인젝션을 이용하여 SonySpeaker 객체가 쓸데없이 두개 생성되는 문제점을 해결해 봅니다.

		<bean id="tv" class="polymorghism_8.SamsungTV">
			<constructor-arg ref="sony"></constructor-arg>
		</bean>
		 <bean id="sony" class="polymorghism_8.SonySpeaker">
		</bean>
	 -->

		<!-- 
	 	<bean id="tv" class="polymorghism_7.SamsungTV">
		 -->

		<!-- 만약, bean 엘리먼트 scope 속성을 "prototype"으로 지정한다면,
                   스프링 컨테이너는 해당 bean이 요청될 때마다 매번 새로운 객체를 생성하여 반환합니다. 
            
         <bean id="tv" class="polymorghism_6.SamsungTV" scope="prototype"></bean>
                   -->

	
	
		<!-- bean 엘리먼트에서 scope 속성 값은 기본이 싱글톤 입니다.
			이는 해당 bean이 스프링 컨테이너에 의해 단 하나만 생성되어 운용되도록 합니다. 
		<bean id="tv" class="polymorghism_6.SamsungTV" scope="singleton"></bean>
			-->
	
	
	
		<!-- 
		 <bean class="polymorghism_5.SamsungTV"></bean>
		 -->
	 
	 
	    <!-- 스프링 컨테이너는 스프링 설정 파일에 등록된 클래스를 객체 생성할 때 디폴트 생성자를 호출합니다.
	        이때, 객체를 생성한 후에 멤버변수 초기화 작업이 필요하다면 Servlet의 init() 메서드와 비슷한
	        역할을 하는 스프링 bean 엘리먼트에 init-method 속성을 지정하면 됩니다.
	     init-method와 마찬가지로 bean 엘리먼트에서 destroy-method 속성을 이용하여
	        스프링 컨테이너가 객체를 삭제하기 직전에 호출될 임의의 메소드를 지정할 수 있습니다.
	     
		<bean id="tv" class="polymorghism_5.SamsungTV" init-method="initMethod" destroy-method="destroyMethod"></bean>
	      -->   
	
	
		<!-- 앞서 TV 예제를 스프링 기반으로 테스트하기 위해 SamsungTV 클래스를 
		스프링 설정 파일 applicationContet.xml 파일에 등록합니다.
		이때, <bean> 엘리먼트를 사용하는데, 클래스 하나당 하나의 <bean> 설정이 
			필용합니다.
		 	<bean id="tv" class="polymorghism_4.LgTV"></bean>
		 -->
		
		
		
		
</beans>
